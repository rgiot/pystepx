{"body": "<div class=\"section\" id=\"module-pystepx.evolver\">\n<h1>3.1. Pystepx base<a class=\"headerlink\" href=\"#module-pystepx.evolver\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"pystepx-pystepx-manager-of-the-gp-run\">\n<h2>3.1.1. <tt class=\"xref docutils literal\"><span class=\"pre\">pystepx.pySTEPX</span></tt> &#8211; Manager of the GP run<a class=\"headerlink\" href=\"#pystepx-pystepx-manager-of-the-gp-run\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Manager of the Genetic Programming Engine.\nYou can control the process by the help of this class.</p>\n<dl class=\"class\">\n<dt id=\"pystepx.pySTEPX.PySTEPX\">\n<em class=\"property\">class </em><tt class=\"descclassname\">pystepx.pySTEPX.</tt><tt class=\"descname\">PySTEPX</tt><big>(</big><em>db_path='/tmp/pySTEPX.sqlite'</em>, <em>start_from_scratch=True</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Genetic Programming Engine Manager.</p>\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.evolve\">\n<tt class=\"descname\">evolve</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.evolve\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Launch the evoluation process.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameter:</th><td class=\"field-body\"><em>is_sequential</em> &#8211; to set if we work sequentially or not.</td>\n</tr>\n</tbody>\n</table>\n<p>When False, evolution stops when the requirement is fit.\nWhen True, evolution stops after each generation</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.get_best_individual\">\n<tt class=\"descname\">get_best_individual</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.get_best_individual\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Returns the best individual of the whole population</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.get_db_name\">\n<tt class=\"descname\">get_db_name</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.get_db_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Set the dbname</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.get_last_generation_number\">\n<tt class=\"descname\">get_last_generation_number</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.get_last_generation_number\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Returns the actual generation.</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.sequentially_evolve\">\n<tt class=\"descname\">sequentially_evolve</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.sequentially_evolve\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Launch the evolution process sequentially.\nThe process stops after each generation.\nThis is a generator returning the best element after each generation</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.set_adf_ordered\">\n<tt class=\"descname\">set_adf_ordered</tt><big>(</big><em>value</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.set_adf_ordered\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Specify if adf must be ordered (prevents infinite loop)</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.set_crossover_mapping\">\n<tt class=\"descname\">set_crossover_mapping</tt><big>(</big><em>mapping</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.set_crossover_mapping\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Set the crossover mapping</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.set_crossover_operator\">\n<tt class=\"descname\">set_crossover_operator</tt><big>(</big><em>operator</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.set_crossover_operator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Set the crossover operator</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.set_db_name\">\n<tt class=\"descname\">set_db_name</tt><big>(</big><em>value</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.set_db_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Set the dbname</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.set_endofgeneration\">\n<tt class=\"descname\">set_endofgeneration</tt><big>(</big><em>handler</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.set_endofgeneration\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Set the function to call at the end of a generation.</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.set_evolver\">\n<tt class=\"descname\">set_evolver</tt><big>(</big><em>evolver</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.set_evolver\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set the evolver object of the gp engine.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameter:</th><td class=\"field-body\"><em>evolver</em> &#8211; evolver to use</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.set_fitness_function\">\n<tt class=\"descname\">set_fitness_function</tt><big>(</big><em>function</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.set_fitness_function\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Set the fitness function to use</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.set_functions\">\n<tt class=\"descname\">set_functions</tt><big>(</big><em>functions</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.set_functions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Set the functions set</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.set_mutation_operator\">\n<tt class=\"descname\">set_mutation_operator</tt><big>(</big><em>operator</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.set_mutation_operator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Set the mutation opertor</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.set_start_from_scratch\">\n<tt class=\"descname\">set_start_from_scratch</tt><big>(</big><em>value</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.set_start_from_scratch\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Set if we need to restart computation from scratch if the database\nalready exists.</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.set_strongly_typed_crossover_degree\">\n<tt class=\"descname\">set_strongly_typed_crossover_degree</tt><big>(</big><em>degree</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.set_strongly_typed_crossover_degree\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>XXX</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.set_substitute_mutation\">\n<tt class=\"descname\">set_substitute_mutation</tt><big>(</big><em>value</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.set_substitute_mutation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Sit if we have to do a mutation when crossover fail</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.set_terminals\">\n<tt class=\"descname\">set_terminals</tt><big>(</big><em>terminals</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.set_terminals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Set the terminal set</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.pySTEPX.PySTEPX.set_tree_rules\">\n<tt class=\"descname\">set_tree_rules</tt><big>(</big><em>rules</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.pySTEPX.PySTEPX.set_tree_rules\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Set the tree rules</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pystepx-basevolver-optimized-evolving\">\n<h2>3.1.2. <tt class=\"xref docutils literal\"><span class=\"pre\">pystepx.basevolver</span></tt> &#8211; Optimized evolving<a class=\"headerlink\" href=\"#pystepx-basevolver-optimized-evolving\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Contains code which can be compiled by cython</p>\n<p>This module contains the methods to start and finish a complete evolutionary\nrun.  The present version can run strongly-typed  Koza-based GP using tournament\nselection.</p>\n<dl class=\"class\">\n<dt id=\"pystepx.baseevolver.BaseEvolver\">\n<em class=\"property\">class </em><tt class=\"descclassname\">pystepx.baseevolver.</tt><tt class=\"descname\">BaseEvolver</tt><a class=\"headerlink\" href=\"#pystepx.baseevolver.BaseEvolver\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Evolver object.\nLaunch the fitness computing on the trees.\nLaunch the next generation compatutation process.</p>\n<blockquote>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">param popsize:</th><td class=\"field-body\">size of the population</td>\n</tr>\n</tbody>\n</table>\n<p>root_node: specify the root node and its arity (nb of children). e.g. (0,2,&#8217;root&#8217;)\n:param mindepth: min tree depth (at the moment only 2 working)\n:param maxdepth: max depth of trees in new generation (should be &gt;=3)\n:param buildmethod: which Koza method is used to build the trees (either\n&#8216;AddHalfNode&#8217; or &#8216;AddFullNode&#8217; or &#8216;AddGrowNodeMin&#8217; respectively for\nRamped Half-n-Half, Full, or Half)\n:param max_nb_runs: the search will gon on until a maximum number of generations\nis reached\n:param fitness_criterion: the search will stop if the fitness found is &lt;= to\nthe ideal fitness\n:param crossover_prob: probability of crossover (will determine what proportion of\nthe population will be replaced by crossover-generated offsprings)\n:param mutation_prob: probability of crossover (will determine what proportion of\nthe population will be replaced by mutation-generated offsprings)\n:param dbname: path to database e.g. r&#8217;D:\u0003d_workpythongppySTGP_0.51srcpop_db&#8217;</p>\n</blockquote>\n<dl class=\"attribute\">\n<dt id=\"pystepx.baseevolver.BaseEvolver.Run\">\n<tt class=\"descname\">Run</tt><a class=\"headerlink\" href=\"#pystepx.baseevolver.BaseEvolver.Run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>XXX Use the sequantial version</p>\n<p>The highest level function of the package.\nIt starts an evolutionary run with given parameters,and gives indications of\nwhat is found after each generation.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameter:</th><td class=\"field-body\"><em>verbose</em> &#8211; print the best tree of each generation</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.baseevolver.BaseEvolver.SetSubstituteMutation\">\n<tt class=\"descname\">SetSubstituteMutation</tt><a class=\"headerlink\" href=\"#pystepx.baseevolver.BaseEvolver.SetSubstituteMutation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Set if we must substitute mutation</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.baseevolver.BaseEvolver.TournamentSelectionEvolveDBPopulation2\">\n<tt class=\"descname\">TournamentSelectionEvolveDBPopulation2</tt><a class=\"headerlink\" href=\"#pystepx.baseevolver.BaseEvolver.TournamentSelectionEvolveDBPopulation2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><blockquote>\ncreate a new population of randomly generated trees and write this new generation\nto a new table of name &#8216;tab&#8217;+generation number in the database.</blockquote>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><em>popsize</em> &#8211; size of the population</li>\n<li><em>maxdepth</em> &#8211; max depth of trees in new generation</li>\n<li><em>crossover_prob</em> &#8211; probability of crossover (will determine what proportion of\nthe population will be replaced by crossover-generated offsprings)\n:param mutation_prob: probability of crossover (will determine what proportion of\nthe population will be replaced by mutation-generated offsprings)\n:param con: Connection to database\nparam tablename: name of the database table of the initial population\n:param tablename2: name of the database table of the next generation</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.baseevolver.BaseEvolver.get_best_individual\">\n<tt class=\"descname\">get_best_individual</tt><a class=\"headerlink\" href=\"#pystepx.baseevolver.BaseEvolver.get_best_individual\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Returns information about the best individual.</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.baseevolver.BaseEvolver.get_real_popsize\">\n<tt class=\"descname\">get_real_popsize</tt><a class=\"headerlink\" href=\"#pystepx.baseevolver.BaseEvolver.get_real_popsize\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Returns the real popsize</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.baseevolver.BaseEvolver.get_tree\">\n<tt class=\"descname\">get_tree</tt><a class=\"headerlink\" href=\"#pystepx.baseevolver.BaseEvolver.get_tree\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Return the required tree.\n:TODO: move this in the right class</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.baseevolver.BaseEvolver.is_evolution_ended\">\n<tt class=\"descname\">is_evolution_ended</tt><a class=\"headerlink\" href=\"#pystepx.baseevolver.BaseEvolver.is_evolution_ended\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>Look if the evolution is ended, because:</dt>\n<dd><ul class=\"first last simple\">\n<li>the maximum generation is get</li>\n<li>the fitness is set</li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.baseevolver.BaseEvolver.load_tree\">\n<tt class=\"descname\">load_tree</tt><a class=\"headerlink\" href=\"#pystepx.baseevolver.BaseEvolver.load_tree\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Load the information of the tree</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.baseevolver.BaseEvolver.print_end_generation\">\n<tt class=\"descname\">print_end_generation</tt><a class=\"headerlink\" href=\"#pystepx.baseevolver.BaseEvolver.print_end_generation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Print if necessary information about the best tree of the\ngeneration.</dd></dl>\n\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"pystepx.baseevolver.CrossoverProbError\">\n<em class=\"property\">exception </em><tt class=\"descclassname\">pystepx.baseevolver.</tt><tt class=\"descname\">CrossoverProbError</tt><a class=\"headerlink\" href=\"#pystepx.baseevolver.CrossoverProbError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Exception related to crossover</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"pystepx.baseevolver.EvolutionException\">\n<em class=\"property\">exception </em><tt class=\"descclassname\">pystepx.baseevolver.</tt><tt class=\"descname\">EvolutionException</tt><a class=\"headerlink\" href=\"#pystepx.baseevolver.EvolutionException\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Exception held during the evolution process</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"pystepx.baseevolver.MutationProbError\">\n<em class=\"property\">exception </em><tt class=\"descclassname\">pystepx.baseevolver.</tt><tt class=\"descname\">MutationProbError</tt><a class=\"headerlink\" href=\"#pystepx.baseevolver.MutationProbError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Exception related to mutation</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"pystepx.baseevolver.OperatorProbError\">\n<em class=\"property\">exception </em><tt class=\"descclassname\">pystepx.baseevolver.</tt><tt class=\"descname\">OperatorProbError</tt><a class=\"headerlink\" href=\"#pystepx.baseevolver.OperatorProbError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Exception related to operators</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"pystepx.baseevolver.PopSizeError\">\n<em class=\"property\">exception </em><tt class=\"descclassname\">pystepx.baseevolver.</tt><tt class=\"descname\">PopSizeError</tt><a class=\"headerlink\" href=\"#pystepx.baseevolver.PopSizeError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Exception related to pop size</dd></dl>\n\n</div>\n<p>Classical evolver.\nContains code that can be compiled by cython.</p>\n<dl class=\"class\">\n<dt id=\"pystepx.evolver.Evolver\">\n<em class=\"property\">class </em><tt class=\"descclassname\">pystepx.evolver.</tt><tt class=\"descname\">Evolver</tt><big>(</big><em>popsize=200</em>, <em>root_node=(0</em>, <em>1</em>, <em>'root')</em>, <em>min_depth=2</em>, <em>max_depth=8</em>, <em>buildmethod='AddHalfNode'</em>, <em>max_nb_runs=100</em>, <em>fitness_criterion=9.9999999999999995e-08</em>, <em>crossover_prob=0.5</em>, <em>mutation_prob=0.48999999999999999</em>, <em>size=7</em>, <em>prob_selection=0.80000000000000004</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.evolver.Evolver\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Evolver object.\nLaunch the fitness computing on the trees.\nLaunch the next generation compatutation process.</p>\n<p>XXX add probability of crossover points\nXXX add the choice for selection (tournament, elitism, ...)</p>\n<blockquote>\n&#64;param popsize: size of the population\nroot_node: specify the root node and its arity (nb of children). e.g. (0,2,&#8217;root&#8217;)\n&#64;param mindepth: min tree depth (at the moment only 2 working)\n&#64;param maxdepth: max depth of trees in new generation (should be &gt;=3)\n&#64;param buildmethod: which Koza method is used to build the trees (either\n&#8216;AddHalfNode&#8217; or &#8216;AddFullNode&#8217; or &#8216;AddGrowNodeMin&#8217; respectively for\nRamped Half-n-Half, Full, or Half)\n&#64;param max_nb_runs: the search will gon on until a maximum number of generations\nis reached\n&#64;param fitness_criterion: the search will stop if the fitness found is &lt;= to\nthe ideal fitness\n&#64;param crossover_prob: probability of crossover (will determine what proportion of\nthe population will be replaced by crossover-generated offsprings)\n&#64;param mutation_prob: probability of crossover (will determine what proportion of\nthe population will be replaced by mutation-generated offsprings)\n&#64;param dbname: path to database e.g. r&#8217;D:\u0003d_workpythongppySTGP_0.51srcpop_db&#8217;</blockquote>\n<dl class=\"attribute\">\n<dt id=\"pystepx.evolver.Evolver.Run\">\n<tt class=\"descname\">Run</tt><a class=\"headerlink\" href=\"#pystepx.evolver.Evolver.Run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>XXX Use the sequantial version</p>\n<p>The highest level function of the package.\nIt starts an evolutionary run with given parameters,and gives indications of\nwhat is found after each generation.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameter:</th><td class=\"field-body\"><em>verbose</em> &#8211; print the best tree of each generation</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.evolver.Evolver.SetSubstituteMutation\">\n<tt class=\"descname\">SetSubstituteMutation</tt><a class=\"headerlink\" href=\"#pystepx.evolver.Evolver.SetSubstituteMutation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Set if we must substitute mutation</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.evolver.Evolver.TournamentSelectionEvolveDBPopulation2\">\n<tt class=\"descname\">TournamentSelectionEvolveDBPopulation2</tt><a class=\"headerlink\" href=\"#pystepx.evolver.Evolver.TournamentSelectionEvolveDBPopulation2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><blockquote>\ncreate a new population of randomly generated trees and write this new generation\nto a new table of name &#8216;tab&#8217;+generation number in the database.</blockquote>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><em>popsize</em> &#8211; size of the population</li>\n<li><em>maxdepth</em> &#8211; max depth of trees in new generation</li>\n<li><em>crossover_prob</em> &#8211; probability of crossover (will determine what proportion of\nthe population will be replaced by crossover-generated offsprings)\n:param mutation_prob: probability of crossover (will determine what proportion of\nthe population will be replaced by mutation-generated offsprings)\n:param con: Connection to database\nparam tablename: name of the database table of the initial population\n:param tablename2: name of the database table of the next generation</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.evolver.Evolver.get_best_individual\">\n<tt class=\"descname\">get_best_individual</tt><a class=\"headerlink\" href=\"#pystepx.evolver.Evolver.get_best_individual\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Returns information about the best individual.</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.evolver.Evolver.get_real_popsize\">\n<tt class=\"descname\">get_real_popsize</tt><a class=\"headerlink\" href=\"#pystepx.evolver.Evolver.get_real_popsize\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Returns the real popsize</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.evolver.Evolver.get_tree\">\n<tt class=\"descname\">get_tree</tt><a class=\"headerlink\" href=\"#pystepx.evolver.Evolver.get_tree\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Return the required tree.\n:TODO: move this in the right class</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.evolver.Evolver.is_evolution_ended\">\n<tt class=\"descname\">is_evolution_ended</tt><a class=\"headerlink\" href=\"#pystepx.evolver.Evolver.is_evolution_ended\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>Look if the evolution is ended, because:</dt>\n<dd><ul class=\"first last simple\">\n<li>the maximum generation is get</li>\n<li>the fitness is set</li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.evolver.Evolver.load_tree\">\n<tt class=\"descname\">load_tree</tt><a class=\"headerlink\" href=\"#pystepx.evolver.Evolver.load_tree\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Load the information of the tree</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.evolver.Evolver.print_end_generation\">\n<tt class=\"descname\">print_end_generation</tt><a class=\"headerlink\" href=\"#pystepx.evolver.Evolver.print_end_generation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Print if necessary information about the best tree of the\ngeneration.</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.evolver.Evolver.run_sequentially\">\n<tt class=\"descname\">run_sequentially</tt><big>(</big><em>verbose=True</em>, <em>print_tree=True</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.evolver.Evolver.run_sequentially\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Run the evolution and stops yield each generation.\nThe process never ends</dd></dl>\n\n</dd></dl>\n\n</div>\n", "display_toc": true, "title": "3.1. Pystepx base", "sourcename": "reference/pystepx.txt", "current_page_name": "reference/pystepx", "next": {"link": "../pystepx_island/", "title": "3.2. Island Gestion"}, "rellinks": [["genindex", "General Index", "I", "index"], ["modindex", "Global Module Index", "M", "modules"], ["reference/pystepx_island", "3.2. Island Gestion", "N", "next"], ["reference/index", "3. Reference Guide", "P", "previous"]], "meta": {}, "parents": [{"link": "../", "title": "3. Reference Guide"}], "toc": "<ul>\n<li><a class=\"reference external\" href=\"#\">3.1. Pystepx base</a><ul>\n<li><a class=\"reference external\" href=\"#pystepx-pystepx-manager-of-the-gp-run\">3.1.1. <tt class=\"docutils literal\"><span class=\"pre\">pystepx.pySTEPX</span></tt> &#8211; Manager of the GP run</a></li>\n<li><a class=\"reference external\" href=\"#pystepx-basevolver-optimized-evolving\">3.1.2. <tt class=\"docutils literal\"><span class=\"pre\">pystepx.basevolver</span></tt> &#8211; Optimized evolving</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../", "title": "3. Reference Guide"}, "metatags": ""}