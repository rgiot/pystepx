{"body": "<div class=\"section\" id=\"module-pystepx.tutorials.Tutorial5\">\n<h1>3.4. Tutorials<a class=\"headerlink\" href=\"#module-pystepx.tutorials.Tutorial5\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"pystepx-tutorial-tutorial-tutorial-1-module\">\n<h2>3.4.1. <tt class=\"xref docutils literal\"><span class=\"pre\">pystepx.tutorial.Tutorial</span></tt> &#8211; Tutorial 1 module<a class=\"headerlink\" href=\"#pystepx-tutorial-tutorial-tutorial-1-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>This module contains the <tt class=\"xref docutils literal\"><span class=\"pre\">pystepx.tutorial.Tutorial.Tutorial1</span></tt> class, which manage the first tutorial case.</p>\n<p>Contains all the classes providing the tutorial examples.\nThis examples are based on the tutorial of the original pySTEP.</p>\n<dl class=\"class\">\n<dt id=\"pystepx.tutorials.Tutorial.Tutorial1\">\n<em class=\"property\">class </em><tt class=\"descclassname\">pystepx.tutorials.Tutorial.</tt><tt class=\"descname\">Tutorial1</tt><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial.Tutorial1\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Contains all parameters for the evolutionary run, grammar rules, constraints,\nand specifics about the terminal and function set of the trees in tutorial1.\nThis example file gather all the settings for a simple polynomial regression\nusing one variable x and the following mathematical operators: &#8216;+&#8217;,&#8217;-&#8216;,&#8217;neg&#8217;,&#8217;*&#8217;,&#8217;^2&#8217;(or square),&#8217;cos&#8217;,&#8217;sin&#8217;.\nWe try to find a third degree polynomial: x^3 + x^2 + cos(x)\nfrom 2 sets of testing data (2 different values for x).\nConsidering the constraints for building the trees, the root node will only have\none child, and there will be no need for ADF in the function and terminal set.</p>\n<dl class=\"method\">\n<dt id=\"pystepx.tutorials.Tutorial.Tutorial1.build_engine\">\n<tt class=\"descname\">build_engine</tt><big>(</big><em>functions</em>, <em>terminals</em>, <em>rules</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial.Tutorial1.build_engine\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Build the engine</p>\n<p>&#64;param functions: dictionnary of the function set\n&#64;param terminals: dictionnary of the terminals</p>\n<p>&#64;return the generated gp_engine</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.tutorials.Tutorial.Tutorial1.define_grammar\">\n<tt class=\"descname\">define_grammar</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial.Tutorial1.define_grammar\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Define the necessary grammar and returns:\n- the whole function set\n- the whole terminal set\n- the treeRules\n- mapping</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.tutorials.Tutorial.Tutorial1.run\">\n<tt class=\"descname\">run</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial.Tutorial1.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Launch the tutorial</dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.tutorials.Tutorial.main\">\n<tt class=\"descclassname\">pystepx.tutorials.Tutorial.</tt><tt class=\"descname\">main</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial.main\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Function: main</p>\n<p>Launch  the set of tutorials</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pystepx-tutorial-tutorial2-tutorial-2-module\">\n<h2>3.4.2. <tt class=\"xref docutils literal\"><span class=\"pre\">pystepx.tutorial.Tutorial2</span></tt> &#8211; Tutorial 2 module<a class=\"headerlink\" href=\"#pystepx-tutorial-tutorial2-tutorial-2-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Contains the class managing the tutorial 2</p>\n<dl class=\"class\">\n<dt id=\"pystepx.tutorials.Tutorial2.Tutorial2\">\n<em class=\"property\">class </em><tt class=\"descclassname\">pystepx.tutorials.Tutorial2.</tt><tt class=\"descname\">Tutorial2</tt><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial2.Tutorial2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Contains all parameters for the evolutionary run, grammar rules, constraints,\nand specifics about the terminal and function set of the trees in tutorial2.</p>\n<p>This example file gather all the settings for a simple polynomial regression\nusing this time 2 variables x and y, and adding random integer constants between 1 and 5,\nand the following mathematical operators: &#8216;+&#8217;,&#8217;-&#8216;,&#8217;neg&#8217;,&#8217;*&#8217;,&#8217;^2&#8217;(or square).</p>\n<p>We try to find the following polynomial: x^2+3y+4\nfrom 5 sets of testing data (5 different values for x and y).</p>\n<p>As Koza said, random constants are the &#8220;skeleton in Genetic Programming closet&#8221;.\nUsing them will definitely slow down a search...\nAny suggestions of current alternative strategies solving this problem would be\nhighly welcomed :)\nConsidering the constraints for building the trees, the root node will only have\none child, and there will be no need for ADF in the function and terminal set.</p>\n<dl class=\"method\">\n<dt id=\"pystepx.tutorials.Tutorial2.Tutorial2.build_engine\">\n<tt class=\"descname\">build_engine</tt><big>(</big><em>functions</em>, <em>terminals</em>, <em>rules</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial2.Tutorial2.build_engine\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Build the engine</p>\n<p>&#64;param functions: dictionnary of the function set\n&#64;param terminals: dictionnary of the terminals</p>\n<p>&#64;return the generated gp_engine</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.tutorials.Tutorial2.Tutorial2.define_grammar\">\n<tt class=\"descname\">define_grammar</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial2.Tutorial2.define_grammar\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Define the necessary grammar and returns:\n- the whole function set\n- the whole terminal set\n- the treeRules\n- defaultFunctionSet,\n- defaultTerminalSet\n- mapping</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.tutorials.Tutorial2.Tutorial2.run\">\n<tt class=\"descname\">run</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial2.Tutorial2.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Launch the tutorial</dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.tutorials.Tutorial2.main\">\n<tt class=\"descclassname\">pystepx.tutorials.Tutorial2.</tt><tt class=\"descname\">main</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial2.main\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Launch  the set of tutorials</dd></dl>\n\n</div>\n<p>Solve the same problem than in Tutorial 3, expect\nthat in this case, we use the real Koza ADFs.</p>\n<dl class=\"class\">\n<dt id=\"pystepx.tutorials.Tutorial3.Tutorial3\">\n<em class=\"property\">class </em><tt class=\"descclassname\">pystepx.tutorials.Tutorial3.</tt><tt class=\"descname\">Tutorial3</tt><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial3.Tutorial3\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Contains all parameters for the evolutionary run, grammar rules, constraints,\nand specifics about the terminal and function set of the trees in tutorial3.</p>\n<p>This example file gather all the settings for a &#8216;multiple&#8217; polynomial regression.\nWe want to evolve a system of ordered polynomial equations by using the\nmathematical operators: &#8216;+&#8217;,&#8217;*&#8217; and the an ADF.</p>\n<p>The main program must used the adf function and returns the score of two equation systems,\nwhich we will not child1 and child2 (referring to ADF1 and ADF2 in Tutorial3).</p>\n<p>We try to find the following model being shaped as a system of polynomials:</p>\n<p><a href=\"#id1\"><span class=\"problematic\" id=\"id2\">|</span></a>child1=x+y\n<a href=\"#id3\"><span class=\"problematic\" id=\"id4\">|</span></a>child2=child^3</p>\n<p>from 30 sets of testing data (30 different values for x and y).\nThis means the each tree has to be evaluated for every different example,\nso 30 times. There is an alternative solution which we will see in the next tutorial,\nwhere instead of evaluating a tree 30 times, we will input an array of 30 data in the\nvariable leafs of the tree.</p>\n<p>In the original tutorial, the generated ADF have no arguments and return one value (this is not \nthe same kind of ADFs than in Koza books).\nIn this tutorial, the ADF is a real function with arguments and which can be called \nseveral times with various parameters.</p>\n<dl class=\"method\">\n<dt id=\"pystepx.tutorials.Tutorial3.Tutorial3.build_engine\">\n<tt class=\"descname\">build_engine</tt><big>(</big><em>functions</em>, <em>terminals</em>, <em>rules</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial3.Tutorial3.build_engine\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Build the engine</p>\n<p>&#64;param functions: dictionnary of the function set\n&#64;param terminals: dictionnary of the terminals</p>\n<p>&#64;return the generated gp_engine</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.tutorials.Tutorial3.Tutorial3.define_grammar\">\n<tt class=\"descname\">define_grammar</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial3.Tutorial3.define_grammar\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Define the necessary grammar and returns:\n- the whole function set\n- the whole terminal set\n- the treeRules\n- mapping</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.tutorials.Tutorial3.Tutorial3.run\">\n<tt class=\"descname\">run</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial3.Tutorial3.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Launch the tutorial</dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.tutorials.Tutorial3.main\">\n<tt class=\"descclassname\">pystepx.tutorials.Tutorial3.</tt><tt class=\"descname\">main</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial3.main\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Launch  the set of tutorials</dd></dl>\n\n<div class=\"section\" id=\"pystepx-tutorial-tutorial4-tutorial-4-module\">\n<h2>3.4.3. <tt class=\"xref docutils literal\"><span class=\"pre\">pystepx.tutorial.Tutorial4</span></tt> &#8211; Tutorial 4 module<a class=\"headerlink\" href=\"#pystepx-tutorial-tutorial4-tutorial-4-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Contains the class managing the tutorial4</p>\n<dl class=\"class\">\n<dt id=\"pystepx.tutorials.Tutorial4.Tutorial4\">\n<em class=\"property\">class </em><tt class=\"descclassname\">pystepx.tutorials.Tutorial4.</tt><tt class=\"descname\">Tutorial4</tt><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial4.Tutorial4\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Contains all parameters for the evolutionary run, grammar rules, constraints,\nand specifics about the terminal and function set of the trees in tutorial4.</p>\n<p>This example file gather all the settings for a &#8216;multiple&#8217; polynomial regression.\nWe want to evolve a system of ordered polynomial equations by using the\nmathematical operators: &#8216;+&#8217;,&#8217;*&#8217; and the ADF: ADF1 and ADF2, in the said order.\nan ADF2 branch could then call for an ADF1 terminal, but not the opposite.</p>\n<p>We try to find the following model being shaped as a system of polynomials:</p>\n<p><a href=\"#id5\"><span class=\"problematic\" id=\"id6\">|</span></a>ADF1=x+y\n<a href=\"#id7\"><span class=\"problematic\" id=\"id8\">|</span></a>ADF2=ADF1^3</p>\n<p>from 1 set of 1000 testing data (1000 different values for x and y).</p>\n<p>This time, each tree does not have to be evaluated 1000 times. We will input\na list of 1000 data points in the variable leafs of the tree. There is not much time\ndifference to process 1000 data-points than 5 when we use this trick!</p>\n<p>Considering the constraints for building the trees, the root node will have 2\nchildren ADF1 and ADF2 (in order), and ADF2 must be able to reuse ADF1 as a\nterminal...</p>\n<dl class=\"method\">\n<dt id=\"pystepx.tutorials.Tutorial4.Tutorial4.build_engine\">\n<tt class=\"descname\">build_engine</tt><big>(</big><em>functions</em>, <em>terminals</em>, <em>rules</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial4.Tutorial4.build_engine\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Build the engine</p>\n<p>&#64;param functions: dictionnary of the function set\n&#64;param terminals: dictionnary of the terminals</p>\n<p>&#64;return the generated gp_engine</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.tutorials.Tutorial4.Tutorial4.define_grammar\">\n<tt class=\"descname\">define_grammar</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial4.Tutorial4.define_grammar\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Define the necessary grammar and returns:\n- the whole function set\n- the whole terminal set\n- the treeRules\n- mapping</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.tutorials.Tutorial4.Tutorial4.run\">\n<tt class=\"descname\">run</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial4.Tutorial4.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Launch the tutorial</dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.tutorials.Tutorial4.main\">\n<tt class=\"descclassname\">pystepx.tutorials.Tutorial4.</tt><tt class=\"descname\">main</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial4.main\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Launch  the set of tutorials</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pystepx-tutorial-tutorial5-tutorial-5-module\">\n<h2>3.4.4. <tt class=\"xref docutils literal\"><span class=\"pre\">pystepx.tutorial.Tutorial5</span></tt> &#8211; Tutorial 5 module<a class=\"headerlink\" href=\"#pystepx-tutorial-tutorial5-tutorial-5-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Contains all the classes providing the tutorial examples.\nThis examples are based on the tutorial of the original pySTEP.</p>\n<dl class=\"class\">\n<dt id=\"pystepx.tutorials.Tutorial5.Tutorial5\">\n<em class=\"property\">class </em><tt class=\"descclassname\">pystepx.tutorials.Tutorial5.</tt><tt class=\"descname\">Tutorial5</tt><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial5.Tutorial5\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Contains all parameters for the evolutionary run, grammar rules, constraints,\nand specifics about the terminal and function set of the trees in tutorial5.</p>\n<p>In this example, we evolve hybrid system: a model containing discrete values\nand logic operators and numerical operations.\nMore specifically, we will evolve if_then_else types rules that will determine\nthe application of different polynomials...\nfrom 20 sets of testing data (20 different values for x and y).</p>\n<p>Considering the constraints for building the trees, the root node will have\n3 children, and these will be ordered ADF defining branches (we simply won&#8217;t use ADF terminals nodes)\ndescribing the structure of the if then else statement.</p>\n<p>The solution found should be the equivalent of this expression:\nif x&gt;y then cos(x) else sin(y)</p>\n<dl class=\"method\">\n<dt id=\"pystepx.tutorials.Tutorial5.Tutorial5.build_engine\">\n<tt class=\"descname\">build_engine</tt><big>(</big><em>functions</em>, <em>terminals</em>, <em>rules</em><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial5.Tutorial5.build_engine\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Build the engine</p>\n<p>&#64;param functions: dictionnary of the function set\n&#64;param terminals: dictionnary of the terminals</p>\n<p>&#64;return the generated gp_engine</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.tutorials.Tutorial5.Tutorial5.define_grammar\">\n<tt class=\"descname\">define_grammar</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial5.Tutorial5.define_grammar\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Define the necessary grammar and returns:\n- the whole function set\n- the whole terminal set\n- the treeRules\n- mapping</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"pystepx.tutorials.Tutorial5.Tutorial5.run\">\n<tt class=\"descname\">run</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial5.Tutorial5.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Launch the tutorial</dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.tutorials.Tutorial5.main\">\n<tt class=\"descclassname\">pystepx.tutorials.Tutorial5.</tt><tt class=\"descname\">main</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.tutorials.Tutorial5.main\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Launch  the set of tutorials</dd></dl>\n\n</div>\n</div>\n", "display_toc": true, "title": "3.4. Tutorials", "sourcename": "reference/pystepx_tutorials.txt", "current_page_name": "reference/pystepx_tutorials", "next": null, "rellinks": [["genindex", "General Index", "I", "index"], ["modindex", "Global Module Index", "M", "modules"], ["reference/pystepx_geneticoperators", "3.3. Genetic Operators", "P", "previous"]], "meta": {}, "parents": [{"link": "../", "title": "3. Reference Guide"}], "toc": "<ul>\n<li><a class=\"reference external\" href=\"#\">3.4. Tutorials</a><ul>\n<li><a class=\"reference external\" href=\"#pystepx-tutorial-tutorial-tutorial-1-module\">3.4.1. <tt class=\"docutils literal\"><span class=\"pre\">pystepx.tutorial.Tutorial</span></tt> &#8211; Tutorial 1 module</a></li>\n<li><a class=\"reference external\" href=\"#pystepx-tutorial-tutorial2-tutorial-2-module\">3.4.2. <tt class=\"docutils literal\"><span class=\"pre\">pystepx.tutorial.Tutorial2</span></tt> &#8211; Tutorial 2 module</a></li>\n<li><a class=\"reference external\" href=\"#pystepx-tutorial-tutorial4-tutorial-4-module\">3.4.3. <tt class=\"docutils literal\"><span class=\"pre\">pystepx.tutorial.Tutorial4</span></tt> &#8211; Tutorial 4 module</a></li>\n<li><a class=\"reference external\" href=\"#pystepx-tutorial-tutorial5-tutorial-5-module\">3.4.4. <tt class=\"docutils literal\"><span class=\"pre\">pystepx.tutorial.Tutorial5</span></tt> &#8211; Tutorial 5 module</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../pystepx_geneticoperators/", "title": "3.3. Genetic Operators"}, "metatags": ""}