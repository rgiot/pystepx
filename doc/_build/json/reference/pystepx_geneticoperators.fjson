{"body": "<div class=\"section\" id=\"module-pystepx.geneticoperators.selection\">\n<h1>3.3. Genetic Operators<a class=\"headerlink\" href=\"#module-pystepx.geneticoperators.selection\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Abstract genetic operation.</p>\n<dl class=\"class\">\n<dt id=\"pystepx.geneticoperators.abstractoperator.AbstractGeneticOperator\">\n<em class=\"property\">class </em><tt class=\"descclassname\">pystepx.geneticoperators.abstractoperator.</tt><tt class=\"descname\">AbstractGeneticOperator</tt><a class=\"headerlink\" href=\"#pystepx.geneticoperators.abstractoperator.AbstractGeneticOperator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for the genetic operators</p>\n<dl class=\"attribute\">\n<dt id=\"pystepx.geneticoperators.abstractoperator.AbstractGeneticOperator.check_configuration\">\n<tt class=\"descname\">check_configuration</tt><a class=\"headerlink\" href=\"#pystepx.geneticoperators.abstractoperator.AbstractGeneticOperator.check_configuration\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Look if the object is correctly configured before being used.\nIf it is not the case, an assertion stops the program</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.geneticoperators.abstractoperator.AbstractGeneticOperator.set_tree_rules\">\n<tt class=\"descname\">set_tree_rules</tt><a class=\"headerlink\" href=\"#pystepx.geneticoperators.abstractoperator.AbstractGeneticOperator.set_tree_rules\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Defines the tree rules to respect when doing the genetic operations.</dd></dl>\n\n</dd></dl>\n\n<p>Basic crossover operations.</p>\n<dl class=\"class\">\n<dt id=\"pystepx.geneticoperators.crossoveroperator.CrossoverOperator\">\n<em class=\"property\">class </em><tt class=\"descclassname\">pystepx.geneticoperators.crossoveroperator.</tt><tt class=\"descname\">CrossoverOperator</tt><a class=\"headerlink\" href=\"#pystepx.geneticoperators.crossoveroperator.CrossoverOperator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Embed all crossover related operations.\nIn the context of strongly-typed Genetic\nProgramming, this operator is heavily modified to produce offsprings that\nare compliant with multiple rules and constraints set by the user.\nIn the present version, only a strongly-typed version of Koza 1 point\ncrossover is supported.</p>\n<dl class=\"attribute\">\n<dt id=\"pystepx.geneticoperators.crossoveroperator.CrossoverOperator.Koza1PointCrossover\">\n<tt class=\"descname\">Koza1PointCrossover</tt><a class=\"headerlink\" href=\"#pystepx.geneticoperators.crossoveroperator.CrossoverOperator.Koza1PointCrossover\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>create 2 offsprings from 2 parents using a modified version of Koza-1-point\ncrossover. This version try to produce offsprings compliant with the\nconstraints and rules used to build an individual. If it does not manage,\nit produce a report showing if the offsprings produced are compatible.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><em>maxdepth</em> &#8211; maximum depth of the mutated offspring</li>\n<li><em>p1</em> &#8211; parent tree 1  e.g. a=buildtree.buildTree().AddHalfNode((0,2,&#8217;root&#8217;),0,2,7)</li>\n<li><em>p2</em> &#8211; parent tree 2  e.g. a=buildtree.buildTree().AddHalfNode((0,2,&#8217;root&#8217;),0,2,7)</li>\n<li><em>p1_mp</em> &#8211; parent tree index mapping e.g a_map=crossutil.get_indices_mapping_from_tree(a)</li>\n<li><em>p2_mp</em> &#8211; parent tree index mapping e.g a_map=crossutil.get_indices_mapping_from_tree(a)</li>\n<li><em>p1_depth</em> &#8211; parent tree depth e.g. a_depth=crossutil.get_depth_from_indices_mapping(a_map)</li>\n<li><em>p2_depth</em> &#8211; parent tree depth e.g. a_depth=crossutil.get_depth_from_indices_mapping(a_map)</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\">a tuple containing 3 elements\n- The first one is a list of 1 and 0 indicating if the first and second offspring are rule\ncompliant.\n[1,1,1,1] frag2_leaf_compatible_p1 and frag1_leaf_compatible_p2 and frag2_branch_compatible_p1 and frag1_branch_compatible_p2\n[1,0,1,1] frag2_leaf_compatible_p1 and not frag1_leaf_compatible_p2 and frag2_branch_compatible_p1 and frag1_branch_compatible_p2\n[1,1,0,1] frag2_leaf_compatible_p1 and frag1_leaf_compatible_p2 and not frag2_branch_compatible_p1 and frag1_branch_compatible_p2\nand so on... This information can be use to decide if we want to introduce non-compliant offsprings into the population.\n- The second one is the first offspring\n- The third one is the second offspring</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.geneticoperators.crossoveroperator.CrossoverOperator.Koza2PointsCrossover\">\n<tt class=\"descname\">Koza2PointsCrossover</tt><a class=\"headerlink\" href=\"#pystepx.geneticoperators.crossoveroperator.CrossoverOperator.Koza2PointsCrossover\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>???</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.geneticoperators.crossoveroperator.CrossoverOperator.check_configuration\">\n<tt class=\"descname\">check_configuration</tt><a class=\"headerlink\" href=\"#pystepx.geneticoperators.crossoveroperator.CrossoverOperator.check_configuration\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Does the test of AbstractGeneticOperator and checked the presence\nof __strongly_typed_crossover_degree__ and __crossover_mapping__</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.geneticoperators.crossoveroperator.CrossoverOperator.set_crossover_mapping\">\n<tt class=\"descname\">set_crossover_mapping</tt><a class=\"headerlink\" href=\"#pystepx.geneticoperators.crossoveroperator.CrossoverOperator.set_crossover_mapping\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Set the crossover mapping</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.geneticoperators.crossoveroperator.CrossoverOperator.set_strongly_typed_crossover_degree\">\n<tt class=\"descname\">set_strongly_typed_crossover_degree</tt><a class=\"headerlink\" href=\"#pystepx.geneticoperators.crossoveroperator.CrossoverOperator.set_strongly_typed_crossover_degree\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.geneticoperators.crossoveroperator.CrossoverOperator.set_tree_rules\">\n<tt class=\"descname\">set_tree_rules</tt><a class=\"headerlink\" href=\"#pystepx.geneticoperators.crossoveroperator.CrossoverOperator.set_tree_rules\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Defines the tree rules to respect when doing the genetic operations.</dd></dl>\n\n</dd></dl>\n\n<p>Contains all sort of utilities to search and manipulate nested lists in the\ncontext of strongly-typed crossover.</p>\n<dl class=\"function\">\n<dt id=\"pystepx.geneticoperators.crossutil.BillSubtreeIndices\">\n<tt class=\"descclassname\">pystepx.geneticoperators.crossutil.</tt><tt class=\"descname\">BillSubtreeIndices</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.geneticoperators.crossutil.BillSubtreeIndices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>gives the indexes of nested lists by depth\noriginal idea from bill at\npython-forum.org</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameter:</th><td class=\"field-body\"><em>tree_rep</em> &#8211; a nested list representing a tree</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">a list representing the indexes of the nested lists by depth</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.geneticoperators.crossutil.BillSubtreeIndices2\">\n<tt class=\"descclassname\">pystepx.geneticoperators.crossutil.</tt><tt class=\"descname\">BillSubtreeIndices2</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.geneticoperators.crossutil.BillSubtreeIndices2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>gives the indexes of nested lists by depth\noriginal idea from bill at\npython-forum.org</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameter:</th><td class=\"field-body\"><em>tree_rep</em> &#8211; a nested list representing a tree</td>\n</tr>\n</tbody>\n</table>\n<p>&#64;:eturn: a dictionary representing the indexes of the nested lists by depth</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.geneticoperators.crossutil.GetDepthFromIndicesMapping\">\n<tt class=\"descclassname\">pystepx.geneticoperators.crossutil.</tt><tt class=\"descname\">GetDepthFromIndicesMapping</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.geneticoperators.crossutil.GetDepthFromIndicesMapping\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gives the depth of the nested list from the index mapping</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameter:</th><td class=\"field-body\"><em>list_indices</em> &#8211; a nested list representing the indexes of the nested lists by depth</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">depth</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.geneticoperators.crossutil.GetIndicesMappingFromTree\">\n<tt class=\"descclassname\">pystepx.geneticoperators.crossutil.</tt><tt class=\"descname\">GetIndicesMappingFromTree</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.geneticoperators.crossutil.GetIndicesMappingFromTree\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>reuse bill&#8217;s idea to gives the indexes of all nodes (may they be\na sub tree or a single leaf) gives a list of indices of every sublist.\nTo do that, I add one thing: the last element of an index is the length\nof the present list. e.g.</p>\n<blockquote>\n<ul>\n<li><dl class=\"first docutils\">\n<dt>get_indices_mapping_from_tree([1,2,3,4,5,6,7,8,9])</dt>\n<dd><p class=\"first last\">gives: [([0], 9)]</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt>get_indices_mapping_from_tree([1,[2,3],4,5,6,7,8,9])</dt>\n<dd><p class=\"first last\">gives: [([0], 8), ([1], 2)]</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt>get_indices_mapping_from_tree([1,[2,3,7],4,5,6,7,8,9])</dt>\n<dd><p class=\"first last\">gives: [([0], 8), ([1], 3)]</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt>get_indices_mapping_from_tree([1,[2,3,7],4,[5,[6,[7,8,9]]]])</dt>\n<dd><p class=\"first last\">gives: [([0], 4), ([1], 3), ([3], 2), ([3, 1], 2), ([3, 1, 1], 3)]</p>\n</dd>\n</dl>\n</li>\n</ul>\n</blockquote>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameter:</th><td class=\"field-body\"><em>tree</em> &#8211; a nested list representing a tree</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">a nested list representing the indexes of the nested lists by depth</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.geneticoperators.crossutil.GetPackedListIndicesAtDepth\">\n<tt class=\"descclassname\">pystepx.geneticoperators.crossutil.</tt><tt class=\"descname\">GetPackedListIndicesAtDepth</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.geneticoperators.crossutil.GetPackedListIndicesAtDepth\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>gives the indexes of nested lists at a specific depth.\nOnly works if the map of indices has been done</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><em>list_indices</em> &#8211; a nested list representing the indexes of the nested lists by depth</li>\n<li><em>depth</em> &#8211; depth at which we wnat the indexes</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\">a nested list representing the indexes of the nested lists</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>at a specific depth</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.geneticoperators.crossutil.IndexLstToIndexStr\">\n<tt class=\"descclassname\">pystepx.geneticoperators.crossutil.</tt><tt class=\"descname\">IndexLstToIndexStr</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.geneticoperators.crossutil.IndexLstToIndexStr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>transform a list into an index element\ne.g. list named &#8216;a&#8217; and index ref is [1,1,2], result is\n&#8216;[1][1][2]&#8217;</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameter:</th><td class=\"field-body\"><em>index</em> &#8211; a flat list of indexes</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">a string</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.geneticoperators.crossutil.IndexLstToIndexStr2\">\n<tt class=\"descclassname\">pystepx.geneticoperators.crossutil.</tt><tt class=\"descname\">IndexLstToIndexStr2</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.geneticoperators.crossutil.IndexLstToIndexStr2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>transform a list into an index element\nthis version is 15% faster\ntransform a list into an index element\ne.g. list named &#8216;a&#8217; and index ref is [1,1,2], result is\n&#8216;[1][1][2]&#8217;</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameter:</th><td class=\"field-body\"><em>index</em> &#8211; a flat list of indexes</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">a string</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.geneticoperators.crossutil.UnpackIndicesFromList\">\n<tt class=\"descclassname\">pystepx.geneticoperators.crossutil.</tt><tt class=\"descname\">UnpackIndicesFromList</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.geneticoperators.crossutil.UnpackIndicesFromList\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>unpack_indices_from_list. e.g. ([([1], 6), ([2], 4)])\ngives: [[1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [2, 1], [2, 2], [2, 3]]</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameter:</th><td class=\"field-body\"><em>map_indices</em> &#8211; a nested list representing the indexes of the nested lists by depth</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">the indexes of different nodes in the tree as a flat list</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<p>Basic mutation operations.</p>\n<dl class=\"class\">\n<dt id=\"pystepx.geneticoperators.mutationoperator.Mutator\">\n<em class=\"property\">class </em><tt class=\"descclassname\">pystepx.geneticoperators.mutationoperator.</tt><tt class=\"descname\">Mutator</tt><a class=\"headerlink\" href=\"#pystepx.geneticoperators.mutationoperator.Mutator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Class doing mutation with respect of the tree rule</p>\n<dl class=\"attribute\">\n<dt id=\"pystepx.geneticoperators.mutationoperator.Mutator.check_configuration\">\n<tt class=\"descname\">check_configuration</tt><a class=\"headerlink\" href=\"#pystepx.geneticoperators.mutationoperator.Mutator.check_configuration\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Look if the object is correctly configured before being used.\nIf it is not the case, an assertion stops the program</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.geneticoperators.mutationoperator.Mutator.mutate\">\n<tt class=\"descname\">mutate</tt><a class=\"headerlink\" href=\"#pystepx.geneticoperators.mutationoperator.Mutator.mutate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>create a mutated individual from a parent tree using Koza styled mutation</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><em>maxdepth</em> &#8211; maximum depth of the mutated offspring</li>\n<li><em>parent</em> &#8211; parent tree e.g. a=buildtree.buildTree().AddHalfNode((0,2,&#8217;root&#8217;),0,2,7)</li>\n<li><em>p1_map</em> &#8211; parent tree index mapping e.g a_map=crossutil.get_indices_mapping_from_tree(a)</li>\n<li><em>p1_depth</em> &#8211; parent tree depth e.g. a_depth=crossutil.get_depth_from_indices_mapping(a_map)</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">a tuple containing two elements.\n- The first one is a boolean indicating if the mutated tree is identical to the parent</p>\n<blockquote>\n<p>(if identical, returns True)</p>\n</blockquote>\n<ul class=\"last simple\">\n<li>The second one is the mutated tree</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"pystepx.geneticoperators.mutationoperator.Mutator.set_tree_rules\">\n<tt class=\"descname\">set_tree_rules</tt><a class=\"headerlink\" href=\"#pystepx.geneticoperators.mutationoperator.Mutator.set_tree_rules\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd>Defines the tree rules to respect when doing the genetic operations.</dd></dl>\n\n</dd></dl>\n\n<p>Contains methods to select individuals from a population.\nSo far fittest selection and tournament selection are supported.</p>\n<dl class=\"function\">\n<dt id=\"pystepx.geneticoperators.selection.GetDBKeysAndFitness\">\n<tt class=\"descclassname\">pystepx.geneticoperators.selection.</tt><tt class=\"descname\">GetDBKeysAndFitness</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.geneticoperators.selection.GetDBKeysAndFitness\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>the list of fitnesses with associated unique ids obtained\nfrom the database. A lengthy operation. Should be only called once\nand used as an argument for the tournament or fitness selection functions.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><em>conn</em> &#8211; connection to the database</li>\n<li><em>tablename</em> &#8211; name of the databse table</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\">the list of fitnesses with associated unique ids obtained</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>from the database</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.geneticoperators.selection.SelectDBOneFittest\">\n<tt class=\"descclassname\">pystepx.geneticoperators.selection.</tt><tt class=\"descname\">SelectDBOneFittest</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.geneticoperators.selection.SelectDBOneFittest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Select fittest individual.\nATTENTION: based on the assumption that db_list is already sorted</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameter:</th><td class=\"field-body\"><em>db_list</em> &#8211; the ordered list of fitnesses with associated unique ids obtained from the database</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">the reference of the one fittest individual</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.geneticoperators.selection.SelectDBSeveralFittest\">\n<tt class=\"descclassname\">pystepx.geneticoperators.selection.</tt><tt class=\"descname\">SelectDBSeveralFittest</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.geneticoperators.selection.SelectDBSeveralFittest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Select n fittest individual</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><em>n</em> &#8211; the number of fittest individuals</li>\n<li><em>db_list</em> &#8211; the ordered list of fitnesses with associated unique ids obtained from the database</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\">the reference of the one fittest individual</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.geneticoperators.selection.SelectFileFittest\">\n<tt class=\"descclassname\">pystepx.geneticoperators.selection.</tt><tt class=\"descname\">SelectFileFittest</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.geneticoperators.selection.SelectFileFittest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Select the fittest individual from a file</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameter:</th><td class=\"field-body\"><em>pop_file</em> &#8211; population file</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">the reference of one selected individual with</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.geneticoperators.selection.TournamentSelectDBOne\">\n<tt class=\"descclassname\">pystepx.geneticoperators.selection.</tt><tt class=\"descname\">TournamentSelectDBOne</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.geneticoperators.selection.TournamentSelectDBOne\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Select one individual from a database using Tournament selection</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><em>size</em> &#8211; number of individual choosen at random from the population</li>\n<li><em>prob_selection</em> &#8211; prob of selecting the fittest of the group</li>\n<li><em>db_list</em> &#8211; the list of fitnesses with associated unique ids obtained from the database</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\">the reference of one selected individual with :</p>\n</td>\n</tr>\n</tbody>\n</table>\n<ul class=\"simple\">\n<li>prob of choosing fittest=p</li>\n<li>prob of choosing second fittest= p*(1-p)</li>\n<li>prob of choosing third fittest= p*((1-p)^2)...</li>\n</ul>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.geneticoperators.selection.TournamentSelectDBSeveral\">\n<tt class=\"descclassname\">pystepx.geneticoperators.selection.</tt><tt class=\"descname\">TournamentSelectDBSeveral</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.geneticoperators.selection.TournamentSelectDBSeveral\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><blockquote>\nSelect one individual from a database using Tournament selection</blockquote>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameter:</th><td class=\"field-body\"><em>nb_outputs</em> &#8211; <p>repeat the tournament selection nb_outputs times, to\nreturn a list nb_outputs selected individuals\n:param size: number of individual choosen at random from the population\n:param prob_selection: prob of selecting the fittest of the group\n:param db_list: the list of fitnesses with associated unique ids obtained from the database\n:param unique: if True, an individual can only be selected one time</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">return:</th><td class=\"field-body\">return a list nb_outputs of references of individuals selected by</td>\n</tr>\n</tbody>\n</table>\n<p>tournament</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"pystepx.geneticoperators.selection.TournamentSelectFileOne\">\n<tt class=\"descclassname\">pystepx.geneticoperators.selection.</tt><tt class=\"descname\">TournamentSelectFileOne</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#pystepx.geneticoperators.selection.TournamentSelectFileOne\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Select one individual from a file using Tournament selection\nappropriate and fast when using a small population (&lt;=1000)</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><em>size</em> &#8211; number of individual choosen at random from the population</li>\n<li><em>pop_file</em> &#8211; population file</li>\n<li><em>prob_selection_fittest</em> &#8211; prob of selecting the fittest of the group</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">the reference of one selected individual with :</p>\n<ul class=\"last simple\">\n<li>prob of choosing fittest=p</li>\n<li>prob of choosing second fittest= p*(1-p)</li>\n<li>prob of choosing third fittest= p*((1-p)^2)...</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n", "display_toc": false, "title": "3.3. Genetic Operators", "sourcename": "reference/pystepx_geneticoperators.txt", "current_page_name": "reference/pystepx_geneticoperators", "next": {"link": "../pystepx_tutorials/", "title": "3.4. Tutorials"}, "rellinks": [["genindex", "General Index", "I", "index"], ["modindex", "Global Module Index", "M", "modules"], ["reference/pystepx_tutorials", "3.4. Tutorials", "N", "next"], ["reference/pystepx_island", "3.2. Island Gestion", "P", "previous"]], "meta": {}, "parents": [{"link": "../", "title": "3. Reference Guide"}], "toc": "<ul>\n<li><a class=\"reference external\" href=\"#\">3.3. Genetic Operators</a></li>\n</ul>\n", "prev": {"link": "../pystepx_island/", "title": "3.2. Island Gestion"}, "metatags": ""}